<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

	<!-- security-context.xml : 시큐리티 관련 설정  -->
	<!-- 접근권한 처리하는 객체 -->

	<bean id="customAccessDenied" class="com.bswill.security.CustomAceessDeniedandHandler"/>
	<!-- 로그인 성공후 이동 객체 -->
	<bean id="customLoginSuccess" class="com.bswill.security.CustomLoginSuccessHandler"/>
	
	<!-- 로그인 실패후 이동 객체 -->
	<bean id="customLoginFailure" class="com.bswill.security.CustomLoginFailureHandler"/>
	
	<!-- 암호화 처리 객체 -->
	<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>

	<security:http>
		<security:intercept-url pattern="/*" access="permitAll" />
		<security:intercept-url pattern="/board/*" access="isAuthenticated()" />
		<security:intercept-url pattern="/emp/*" access="isAuthenticated()" />
		<security:intercept-url pattern="/emp/registEmp" access="hasAnyRole('ROLE_MANAGER', 'ROLE_ADMIN')" />
		<security:intercept-url pattern="/emp/listEmp" access="hasAnyRole('ROLE_MANAGER', 'ROLE_ADMIN')" />
		<security:intercept-url pattern="/emp/listEvent" access="hasAnyRole('ROLE_MANAGER', 'ROLE_ADMIN')" />
		<security:intercept-url pattern="/common/main" access="permitAll" />
		
		
		<!-- 로그인 -->
		<security:form-login login-page="/common/customLogin"
							 authentication-success-handler-ref="customLoginSuccess"
							 authentication-failure-handler-ref="customLoginFailure"
							 />
		
		<!-- 로그아웃 -->
		<security:logout logout-url="/customLogout" logout-success-url="/common/customLogin?logout" invalidate-session="true" />
							 
		
		<!-- 접근권한이 없을 때 보여지는 뷰페이지 이동 (redirect) -->
		<security:access-denied-handler ref="customAccessDenied"/>


	</security:http>
	<!-- 시큐리티 관련 처리 -->
	<security:authentication-manager>
		<!-- 시큐리티 관련 처리 -->
		<security:authentication-provider>
			<!-- 사용자 인증정보 관리(+JDBC) -->
			<security:jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select employee_id,passwd,enabled from tbl_employee where employee_id=?"
				authorities-by-username-query="select employee_id,auth from tbl_auth where employee_id=?" />

			<security:password-encoder ref="bcryptPasswordEncoder" />



		</security:authentication-provider>
	</security:authentication-manager>


</beans>